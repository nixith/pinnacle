syntax = "proto2";

package pinnacle.window.v0alpha1;

import "google/protobuf/empty.proto";
import "pinnacle/v0alpha1/pinnacle.proto";

message CloseRequest {
  optional uint32 window_id = 1;
}

// Set the window's location and size
message SetGeometryRequest {
  optional uint32 window_id = 1;
  optional .pinnacle.v0alpha1.Geometry geometry = 2;
}

message SetFullscreenRequest {
  optional uint32 window_id = 1;
  optional .pinnacle.v0alpha1.SetOrToggle set_or_toggle = 2;
}

message SetMaximizedRequest {
  optional uint32 window_id = 1;
  optional .pinnacle.v0alpha1.SetOrToggle set_or_toggle = 2;
}

message SetFloatingRequest {
  optional uint32 window_id = 1;
  optional .pinnacle.v0alpha1.SetOrToggle set_or_toggle = 2;
}

message SetFocusedRequest {
  optional uint32 window_id = 1;
  optional .pinnacle.v0alpha1.SetOrToggle set_or_toggle = 2;
}

message MoveToTagRequest {
  optional uint32 window_id = 1;
  optional uint32 tag_id = 2;
}

message SetTagRequest {
  optional uint32 window_id = 1;
  optional uint32 tag_id = 2;
  optional .pinnacle.v0alpha1.SetOrToggle set_or_toggle = 3;
}

// Raise a window.
message RaiseRequest {
  // The id of the window to raise.
  optional uint32 window_id = 1;
}

message MoveGrabRequest {
  optional uint32 button = 1;
}

message ResizeGrabRequest {
  optional uint32 button = 1;
}


message GetRequest {}
message GetResponse {
  repeated uint32 window_ids = 1;
}

message GetPropertiesRequest {
  optional uint32 window_id = 1;
}
message GetPropertiesResponse {
  optional .pinnacle.v0alpha1.Geometry geometry = 1;
  optional string class = 2;
  optional string title = 3;
  optional bool focused = 4;
  optional bool floating = 5;
  optional FullscreenOrMaximized fullscreen_or_maximized = 6;
  repeated uint32 tag_ids = 7;
}

enum FullscreenOrMaximized {
  FULLSCREEN_OR_MAXIMIZED_UNSPECIFIED = 0;
  FULLSCREEN_OR_MAXIMIZED_NEITHER = 1;
  FULLSCREEN_OR_MAXIMIZED_FULLSCREEN = 2;
  FULLSCREEN_OR_MAXIMIZED_MAXIMIZED = 3;
}

message AddWindowRuleRequest {
  optional WindowRuleCondition cond = 1;
  optional WindowRule rule = 2;
}

message WindowRuleCondition {
  repeated WindowRuleCondition any = 1;
  repeated WindowRuleCondition all = 2;
  repeated string classes = 3;
  repeated string titles = 4;
  repeated uint32 tags = 5;
}

message WindowRule {
  optional string output = 1;
  repeated uint32 tags = 2;
  // `true` for floating, `false` for tiled
  optional bool floating = 3;

  optional FullscreenOrMaximized fullscreen_or_maximized = 4;

  optional int32 x = 5;
  optional int32 y = 6;
  optional int32 width = 7;
  optional int32 height = 8;
}

service WindowService {
  rpc Close(CloseRequest) returns (google.protobuf.Empty);
  rpc SetGeometry(SetGeometryRequest) returns (google.protobuf.Empty);
  rpc SetFullscreen(SetFullscreenRequest) returns (google.protobuf.Empty);
  rpc SetMaximized(SetMaximizedRequest) returns (google.protobuf.Empty);
  rpc SetFloating(SetFloatingRequest) returns (google.protobuf.Empty);
  rpc SetFocused(SetFocusedRequest) returns (google.protobuf.Empty);
  rpc MoveToTag(MoveToTagRequest) returns (google.protobuf.Empty);
  rpc SetTag(SetTagRequest) returns (google.protobuf.Empty);
  rpc Raise(RaiseRequest) returns (google.protobuf.Empty);
  rpc MoveGrab(MoveGrabRequest) returns (google.protobuf.Empty);
  rpc ResizeGrab(ResizeGrabRequest) returns (google.protobuf.Empty);

  rpc Get(GetRequest) returns (GetResponse);
  rpc GetProperties(GetPropertiesRequest) returns (GetPropertiesResponse);

  rpc AddWindowRule(AddWindowRuleRequest) returns (google.protobuf.Empty);
}
